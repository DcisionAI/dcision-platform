{"file":"/Users/ameydhavle/Documents/DcisionAI/dcisionai-platform/packages/sdk-js/src/index.test.ts","mappings":"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","names":[],"sources":["/Users/ameydhavle/Documents/DcisionAI/dcisionai-platform/packages/sdk-js/src/index.test.ts"],"sourcesContent":["import { createClient, solveLaborScheduling, solveResourceAllocation, solveProjectScheduling, solveMaterialDeliveryPlanning, solveRiskSimulation } from './index';\nimport { DefaultApi } from './generated';\n\ndescribe('SDK Client', () => {\n  it('should create a DefaultApi client instance', () => {\n    const apiKey = 'test-key';\n    const baseUrl = 'http://localhost';\n    const client = createClient(apiKey, baseUrl);\n    expect(client).toBeInstanceOf(DefaultApi);\n  });\n  \n  describe('wrapper functions', () => {\n    const apiKey = 'abc123';\n    beforeEach(() => {\n      // @ts-ignore\n      global.fetch = jest.fn((url, opts) =>\n        Promise.resolve({\n          ok: true,\n          json: () => Promise.resolve({ success: true, url, body: opts?.body })\n        }) as any\n      );\n    });\n    afterEach(() => {\n      jest.resetAllMocks();\n    });\n\n    it('solveLaborScheduling sends correct payload', async () => {\n      const model = { foo: 'bar' };\n      const res = await solveLaborScheduling(apiKey, model, { baseUrl: 'http://host' });\n      expect(res).toEqual(expect.objectContaining({ success: true }));\n      // verify fetch called on correct endpoint and body contains model\n      expect((global.fetch as jest.Mock).mock.calls[0][0]).toBe('http://host/mcp/submit');\n      const body = JSON.parse((global.fetch as jest.Mock).mock.calls[0][1].body);\n      expect(body.model).toMatchObject({ problemType: 'labor_scheduling', ...model });\n    });\n\n    it('solveResourceAllocation sends correct payload', async () => {\n      const model = { a: 1 };\n      const res = await solveResourceAllocation(apiKey, model);\n      expect(res).toEqual(expect.objectContaining({ success: true }));\n      const called = (global.fetch as jest.Mock).mock.calls[0];\n      expect(called[0]).toBe('https://mcp.dcisionai.com/mcp/submit');\n      const b = JSON.parse(called[1].body);\n      expect(b.context.problemType).toBe('equipment_allocation');\n      expect(b.model).toMatchObject({ problemType: 'equipment_allocation', ...model });\n    });\n    \n    it('solveProjectScheduling sends correct payload', async () => {\n      const model = { x: 42 };\n      const res = await solveProjectScheduling(apiKey, model, { baseUrl: 'http://host' });\n      expect(res).toEqual(expect.objectContaining({ success: true }));\n      const called = (global.fetch as jest.Mock).mock.calls.pop();\n      expect(called[0]).toBe('http://host/mcp/submit');\n      const body = JSON.parse(called[1].body);\n      expect(body.context.problemType).toBe('risk_simulation');\n      expect(body.model).toMatchObject({ problemType: 'risk_simulation', ...model });\n    });\n\n    it('solveMaterialDeliveryPlanning sends correct payload', async () => {\n      const model = { deliveries: [] };\n      const res = await solveMaterialDeliveryPlanning(apiKey, model, { baseUrl: 'http://host' });\n      expect(res).toEqual(expect.objectContaining({ success: true }));\n      const called = (global.fetch as jest.Mock).mock.calls.pop();\n      expect(called[0]).toBe('http://host/mcp/submit');\n      const body = JSON.parse(called[1].body);\n      expect(body.context.problemType).toBe('material_delivery_planning');\n    });\n\n    it('solveRiskSimulation sends correct payload', async () => {\n      const model = { foo: 'bar' };\n      const res = await solveRiskSimulation(apiKey, model, { baseUrl: 'http://host' });\n      expect(res).toEqual(expect.objectContaining({ success: true }));\n      const called = (global.fetch as jest.Mock).mock.calls.pop();\n      expect(called[0]).toBe('http://host/mcp/submit');\n      const body = JSON.parse(called[1].body);\n      expect(body.context.problemType).toBe('risk_simulation');\n    });\n  });\n});"],"version":3}