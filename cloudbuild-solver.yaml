steps:
  # Build the solver service Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-f', 'Dockerfile.solver',
      '-t', '${_IMAGE_NAME}:${_COMMIT_SHA}',
      '-t', '${_IMAGE_NAME}:latest',
      '.'
    ]

  # Push the image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_IMAGE_NAME}:${_COMMIT_SHA}']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_IMAGE_NAME}:latest']

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run', 'deploy', '${_SERVICE_NAME}',
      '--image', '${_IMAGE_NAME}:${_COMMIT_SHA}',
      '--region', '${_REGION}',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--port', '8080',
      '--memory', '2Gi',
      '--cpu', '2',
      '--max-instances', '10',
      '--timeout', '300',
      '--concurrency', '80',
      '--project', '${_PROJECT_ID}'
    ]

# Store images in Google Container Registry
images:
  - '${_IMAGE_NAME}:${_COMMIT_SHA}'
  - '${_IMAGE_NAME}:latest'

# Build configuration
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

# Substitutions
substitutions:
  _PROJECT_ID: 'dcisionai'
  _REGION: 'us-central1'
  _SERVICE_NAME: 'solver-service'
  _IMAGE_NAME: 'gcr.io/dcisionai/solver-service' 